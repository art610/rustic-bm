#!/bin/bash

# === –ü–û–î–ì–û–¢–û–í–ö–ê RECOVERY KIT ===

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
INSTALLERS_DIR="$SCRIPT_DIR/installers"
KIT_DIR="$SCRIPT_DIR/recovery-kit"

echo "üõ†Ô∏è  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ recovery kit..."

mkdir -p "$KIT_DIR"

# –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è
extract_and_rename() {
    local archive="$1"
    local target_name="$2"

    if [ ! -f "$INSTALLERS_DIR/$archive" ]; then
        echo "‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫: $archive –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi

    echo "üì¶ –û–±—Ä–∞–±–æ—Ç–∫–∞ $archive -> $target_name"

    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
    local temp_dir=$(mktemp -d)

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∞—Ä—Ö–∏–≤ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
    tar -xzf "$INSTALLERS_DIR/$archive" -C "$temp_dir"

    # –ò—â–µ–º –±–∏–Ω–∞—Ä–Ω–∏–∫ rustic
    local rustic_binary=""
    if [ -f "$temp_dir/rustic.exe" ]; then
        rustic_binary="$temp_dir/rustic.exe"
    elif [ -f "$temp_dir/rustic" ]; then
        rustic_binary="$temp_dir/rustic"
    else
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –±–∏–Ω–∞—Ä–Ω–∏–∫ –≤ –∞—Ä—Ö–∏–≤–µ $archive"
        rm -rf "$temp_dir"
        return 1
    fi

    # –ö–æ–ø–∏—Ä—É–µ–º –≤ recovery-kit
    cp "$rustic_binary" "$KIT_DIR/$target_name"
    chmod +x "$KIT_DIR/$target_name"

    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
    rm -rf "$temp_dir"

    echo "‚úÖ –ì–æ—Ç–æ–≤: $target_name"
    return 0
}

# –ö–∞—Ä—Ç–∞ –∞—Ä—Ö–∏–≤–æ–≤ –∏ —Ü–µ–ª–µ–≤—ã—Ö –∏–º–µ–Ω
declare -A ARCHIVE_MAP=(
    ["rustic-v0.9.5-x86_64-unknown-linux-gnu.tar.gz"]="rustic-linux-x64"
    ["rustic-v0.9.5-aarch64-unknown-linux-gnu.tar.gz"]="rustic-linux-arm64"
    ["rustic-v0.9.5-x86_64-apple-darwin.tar.gz"]="rustic-macos-intel"
    ["rustic-v0.9.5-aarch64-apple-darwin.tar.gz"]="rustic-macos-apple"
    ["rustic-v0.9.5-x86_64-pc-windows-msvc.tar.gz"]="rustic-windows.exe"
)

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –∞—Ä—Ö–∏–≤—ã
echo "üì¶ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –±–∏–Ω–∞—Ä–Ω–∏–∫–æ–≤ –∏–∑ –∞—Ä—Ö–∏–≤–æ–≤..."
extracted_count=0

for archive in "${!ARCHIVE_MAP[@]}"; do
    target_name="${ARCHIVE_MAP[$archive]}"
    if extract_and_rename "$archive" "$target_name"; then
        extracted_count=$((extracted_count + 1))
    fi
done

if [ $extracted_count -eq 0 ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –Ω–∏ –æ–¥–Ω–æ–≥–æ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞!"
    echo "üìç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ installers:"
    ls -la "$INSTALLERS_DIR"
    exit 1
fi

echo "‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–æ $extracted_count –±–∏–Ω–∞—Ä–Ω–∏–∫–æ–≤"

# –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è Unix
echo "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ recovery.sh –¥–ª—è Linux/macOS..."
cat > "$KIT_DIR/recovery.sh" << 'EOF'
#!/bin/bash

# === –ü–û–†–¢–ê–¢–ò–í–ù–´–ô –í–û–°–°–¢–ê–ù–û–í–ò–¢–ï–õ–¨ RUSTIC ===
# –†–∞–±–æ—Ç–∞–µ—Ç –ë–ï–ó –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–∏

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PASSWORD_FILE="$SCRIPT_DIR/password.txt"

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

log_info() { echo -e "${YELLOW}[INFO]${NC} $1"; }
log_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
log_error() { echo -e "${RED}[ERROR]${NC} $1"; }

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
detect_rustic_binary() {
    local os_type=$(uname -s)
    local arch=$(uname -m)

    case "$os_type" in
        "Linux")
            case "$arch" in
                x86_64) echo "rustic-linux-x64" ;;
                aarch64|arm64) echo "rustic-linux-arm64" ;;
                *) echo "unknown" ;;
            esac
            ;;
        "Darwin")
            case "$arch" in
                x86_64) echo "rustic-macos-intel" ;;
                arm64) echo "rustic-macos-apple" ;;
                *) echo "unknown" ;;
            esac
            ;;
        *)
            echo "unknown"
            ;;
    esac
}

# –ü–æ–∏—Å–∫ rustic
find_rustic() {
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π rustic
    if command -v rustic >/dev/null 2>&1; then
        echo "rustic"
        return 0
    fi

    # 2. –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π –±–∏–Ω–∞—Ä–Ω–∏–∫
    local target_binary=$(detect_rustic_binary)
    local rustic_path="$SCRIPT_DIR/$target_binary"

    if [ -f "$rustic_path" ]; then
        chmod +x "$rustic_path"
        echo "$rustic_path"
        return 0
    fi

    # 3. –ò—â–µ–º –ª—é–±–æ–π rustic –≤ –ø–∞–ø–∫–µ
    for file in "$SCRIPT_DIR"/rustic*; do
        if [ -f "$file" ] && [ -x "$file" ]; then
            echo "$file"
            return 0
        fi
    done

    return 1
}

# –ü–æ–∏—Å–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
find_repository() {
    echo ""
    log_info "=== –ü–û–ò–°–ö –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø RUSTIC ==="

    local possible_repos=(
        "$HOME/rustic-backup"
        "$SCRIPT_DIR/rustic-backup"
        "./rustic-backup"
        "../rustic-backup"
    )

    echo "–ü–æ–∏—Å–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö:"
    for repo in "${possible_repos[@]}"; do
        if [ -d "$repo" ]; then
            log_success "–ù–∞–π–¥–µ–Ω: $repo"
            echo "$repo"
            return 0
        else
            echo "  ‚úó $repo"
        fi
    done

    echo ""
    log_info "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏."
    read -p "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é rustic: " manual_repo

    if [ -d "$manual_repo" ]; then
        echo "$manual_repo"
        return 0
    else
        log_error "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω: $manual_repo"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
get_password() {
    if [ -f "$PASSWORD_FILE" ]; then
        log_success "–ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –ø–∞—Ä–æ–ª—è: $PASSWORD_FILE"
        echo "$PASSWORD_FILE"
    else
        log_info "–§–∞–π–ª –ø–∞—Ä–æ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω."
        read -s -p "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: " password
        echo ""
        echo "$password" > "/tmp/rustic_password_$$"
        echo "/tmp/rustic_password_$$"
    fi
}

# –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
list_snapshots() {
    local rustic="$1"
    local repo="$2"
    local password_file="$3"

    log_info "–°–ø–∏—Å–æ–∫ —Å–Ω–∞–ø—à–æ—Ç–æ–≤ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏:"
    "$rustic" snapshots --repository "$repo" --password-file "$password_file"
}

restore_data() {
    local rustic="$1"
    local repo="$2"
    local password_file="$3"

    echo ""
    log_info "=== –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –î–ê–ù–ù–´–• ==="

    list_snapshots "$rustic" "$repo" "$password_file"

    echo ""
    read -p "ID —Å–Ω–∞–ø—à–æ—Ç–∞ (–∏–ª–∏ 'latest' –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ): " snapshot_id
    read -p "–ü—É—Ç—å –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è [./restored]: " restore_path

    if [ -z "$restore_path" ]; then
        restore_path="./restored"
    fi

    mkdir -p "$restore_path"

    log_info "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–Ω–∞–ø—à–æ—Ç–∞ '$snapshot_id' –≤ '$restore_path'..."

    if "$rustic" restore "$snapshot_id" \
        --repository "$repo" \
        --password-file "$password_file" \
        --target "$restore_path"; then

        log_success "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
        log_info "–î–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤: $(realpath "$restore_path")"

        echo ""
        log_info "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"
        find "$restore_path" -type f | head -20
        local total_files=$(find "$restore_path" -type f | wc -l)
        if [ "$total_files" -gt 20 ]; then
            echo "... –∏ –µ—â–µ $(($total_files - 20)) —Ñ–∞–π–ª–æ–≤"
        fi

    else
        log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏!"
        return 1
    fi
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
show_menu() {
    echo ""
    echo "=========================================="
    echo "    –ü–û–†–¢–ê–¢–ò–í–ù–´–ô –í–û–°–°–¢–ê–ù–û–í–ò–¢–ï–õ–¨ RUSTIC"
    echo "=========================================="
    echo "1) –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ"
    echo "2) –°–ø–∏—Å–æ–∫ —Å–Ω–∞–ø—à–æ—Ç–æ–≤"
    echo "3) –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"
    echo "4) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
    echo "0) –í—ã—Ö–æ–¥"
    echo "=========================================="
}

check_system() {
    echo ""
    log_info "=== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï ==="
    echo "–û–°: $(uname -s) $(uname -r)"
    echo "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $(uname -m)"
    echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $USER"
    echo "–î–æ–º–∞—à–Ω—è—è –ø–∞–ø–∫–∞: $HOME"
    echo "–¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞: $(pwd)"
    echo "–û–∂–∏–¥–∞–µ–º—ã–π –±–∏–Ω–∞—Ä–Ω–∏–∫: $(detect_rustic_binary)"

    local rustic_bin=$(find_rustic 2>/dev/null || echo "–Ω–µ –Ω–∞–π–¥–µ–Ω")
    echo "Rustic: $rustic_bin"

    if [ "$rustic_bin" != "–Ω–µ –Ω–∞–π–¥–µ–Ω" ]; then
        echo "–í–µ—Ä—Å–∏—è: $("$rustic_bin" --version 2>/dev/null || echo "–æ—à–∏–±–∫–∞")"
    fi
}

verify_repository() {
    local rustic="$1"
    local repo="$2"
    local password_file="$3"

    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."

    if "$rustic" check --repository "$repo" --password-file "$password_file"; then
        log_success "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≤ –ø–æ—Ä—è–¥–∫–µ!"
    else
        log_error "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏!"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    log_info "–ó–∞–ø—É—Å–∫ –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ–ª—è..."

    local rustic_binary
    if ! rustic_binary=$(find_rustic); then
        log_error "–ë–∏–Ω–∞—Ä–Ω–∏–∫ rustic –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        log_info "–û–∂–∏–¥–∞–µ–º–æ–µ –∏–º—è: $(detect_rustic_binary)"
        exit 1
    fi

    log_success "–ù–∞–π–¥–µ–Ω rustic: $rustic_binary"

    local repository
    if ! repository=$(find_repository); then
        exit 1
    fi

    local password_file
    if ! password_file=$(get_password); then
        exit 1
    fi

    while true; do
        show_menu
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (0-4): " choice

        case $choice in
            1) check_system ;;
            2) list_snapshots "$rustic_binary" "$repository" "$password_file" ;;
            3) restore_data "$rustic_binary" "$repository" "$password_file" ;;
            4) verify_repository "$rustic_binary" "$repository" "$password_file" ;;
            0)
                log_info "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
                [ -f "/tmp/rustic_password_$$" ] && rm "/tmp/rustic_password_$$"
                exit 0
                ;;
            *) log_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä" ;;
        esac

        echo ""
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    done
}

main "$@"
EOF

chmod +x "$KIT_DIR/recovery.sh"

# –°–æ–∑–¥–∞–µ–º Windows .bat —Ñ–∞–π–ª
echo "ü™ü –°–æ–∑–¥–∞–Ω–∏–µ recovery.bat –¥–ª—è Windows..."
cat > "$KIT_DIR/recovery.bat" << 'EOF'
@echo off
chcp 65001 >nul
setlocal enabledelayedexpansion

:: === –ü–û–†–¢–ê–¢–ò–í–ù–´–ô –í–û–°–°–¢–ê–ù–û–í–ò–¢–ï–õ–¨ RUSTIC –¥–ª—è Windows ===

set "SCRIPT_DIR=%~dp0"
set "PASSWORD_FILE=%SCRIPT_DIR%password.txt"
set "RUSTIC_BINARY=%SCRIPT_DIR%rustic-windows.exe"

echo.
echo ==========================================
echo     –ü–û–†–¢–ê–¢–ò–í–ù–´–ô –í–û–°–°–¢–ê–ù–û–í–ò–¢–ï–õ–¨ RUSTIC
echo ==========================================

:: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ rustic
if not exist "%RUSTIC_BINARY%" (
    echo [ERROR] –ù–µ –Ω–∞–π–¥–µ–Ω rustic-windows.exe –≤ –ø–∞–ø–∫–µ!
    echo –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ñ–∞–π–ª rustic-windows.exe –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ä—è–¥–æ–º —Å —ç—Ç–∏–º —Å–∫—Ä–∏–ø—Ç–æ–º.
    pause
    exit /b 1
)

echo [INFO] –ù–∞–π–¥–µ–Ω rustic: %RUSTIC_BINARY%

:: –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é
echo [INFO] –í–µ—Ä—Å–∏—è rustic:
"%RUSTIC_BINARY%" --version
echo.

:: –ü–æ–∏—Å–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
echo [INFO] === –ü–û–ò–°–ö –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø ===
set "REPOSITORY="

:: –í–æ–∑–º–æ–∂–Ω—ã–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
set "REPOS[0]=%USERPROFILE%\rustic-backup"
set "REPOS[1]=%SCRIPT_DIR%rustic-backup"
set "REPOS[2]=.\rustic-backup"
set "REPOS[3]=..\rustic-backup"

echo –ü–æ–∏—Å–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö:
for /L %%i in (0,1,3) do (
    if exist "!REPOS[%%i]!" (
        echo   [SUCCESS] –ù–∞–π–¥–µ–Ω: !REPOS[%%i]!
        set "REPOSITORY=!REPOS[%%i]!"
        goto :found_repo
    ) else (
        echo   [x] !REPOS[%%i]!
    )
)

:: –†—É—á–Ω–æ–π –≤–≤–æ–¥ –ø—É—Ç–∏
echo.
echo [INFO] –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
set /p "MANUAL_REPO=–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é rustic: "
if exist "%MANUAL_REPO%" (
    set "REPOSITORY=%MANUAL_REPO%"
    goto :found_repo
) else (
    echo [ERROR] –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω: %MANUAL_REPO%
    pause
    exit /b 1
)

:found_repo
echo [SUCCESS] –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: %REPOSITORY%

:: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
if exist "%PASSWORD_FILE%" (
    echo [SUCCESS] –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –ø–∞—Ä–æ–ª—è: %PASSWORD_FILE%
    set "PASSWORD_ARG=--password-file "%PASSWORD_FILE%""
) else (
    echo [INFO] –§–∞–π–ª –ø–∞—Ä–æ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω.
    set /p "PASSWORD=–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: "
    echo !PASSWORD! > "%TEMP%\rustic_password.txt"
    set "PASSWORD_ARG=--password-file "%TEMP%\rustic_password.txt""
)

:: –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
:main_menu
echo.
echo ==========================================
echo 1^) –°–ø–∏—Å–æ–∫ —Å–Ω–∞–ø—à–æ—Ç–æ–≤
echo 2^) –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
echo 3^) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
echo 4^) –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
echo 0^) –í—ã—Ö–æ–¥
echo ==========================================
set /p "CHOICE=–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (0-4): "

if "%CHOICE%"=="1" goto :list_snapshots
if "%CHOICE%"=="2" goto :restore_data
if "%CHOICE%"=="3" goto :check_repo
if "%CHOICE%"=="4" goto :system_info
if "%CHOICE%"=="0" goto :exit
echo [ERROR] –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä
goto :main_menu

:list_snapshots
echo.
echo [INFO] === –°–ü–ò–°–û–ö –°–ù–ê–ü–®–û–¢–û–í ===
"%RUSTIC_BINARY%" snapshots --repository "%REPOSITORY%" %PASSWORD_ARG%
pause
goto :main_menu

:restore_data
echo.
echo [INFO] === –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –î–ê–ù–ù–´–• ===

:: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–Ω–∞–ø—à–æ—Ç—ã
echo –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–Ω–∞–ø—à–æ—Ç—ã:
"%RUSTIC_BINARY%" snapshots --repository "%REPOSITORY%" %PASSWORD_ARG%

echo.
set /p "SNAPSHOT_ID=ID —Å–Ω–∞–ø—à–æ—Ç–∞ (–∏–ª–∏ 'latest' –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ): "
set /p "RESTORE_PATH=–ü—É—Ç—å –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è [.\restored]: "

if "%RESTORE_PATH%"=="" set "RESTORE_PATH=.\restored"

:: –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É
if not exist "%RESTORE_PATH%" mkdir "%RESTORE_PATH%"

echo [INFO] –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–Ω–∞–ø—à–æ—Ç–∞ '%SNAPSHOT_ID%' –≤ '%RESTORE_PATH%'...
"%RUSTIC_BINARY%" restore "%SNAPSHOT_ID%" --repository "%REPOSITORY%" %PASSWORD_ARG% --target "%RESTORE_PATH%"

if %ERRORLEVEL%==0 (
    echo [SUCCESS] –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!
    echo [INFO] –î–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤: %RESTORE_PATH%
    echo.
    echo [INFO] –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:
    dir /s /b "%RESTORE_PATH%" | findstr /v /c:"$" | more
) else (
    echo [ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏!
)
pause
goto :main_menu

:check_repo
echo.
echo [INFO] === –ü–†–û–í–ï–†–ö–ê –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø ===
"%RUSTIC_BINARY%" check --repository "%REPOSITORY%" %PASSWORD_ARG%
if %ERRORLEVEL%==0 (
    echo [SUCCESS] –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≤ –ø–æ—Ä—è–¥–∫–µ!
) else (
    echo [ERROR] –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏!
)
pause
goto :main_menu

:system_info
echo.
echo [INFO] === –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï ===
echo –û–°: Windows
echo –í–µ—Ä—Å–∏—è:
ver
echo –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: %USERNAME%
echo –î–æ–º–∞—à–Ω—è—è –ø–∞–ø–∫–∞: %USERPROFILE%
echo –¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞: %CD%
echo Rustic: %RUSTIC_BINARY%
echo –í–µ—Ä—Å–∏—è rustic:
"%RUSTIC_BINARY%" --version
pause
goto :main_menu

:exit
echo [INFO] –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!
:: –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
if exist "%TEMP%\rustic_password.txt" del "%TEMP%\rustic_password.txt"
pause
exit /b 0
EOF

echo "‚úÖ –°–æ–∑–¥–∞–Ω recovery.bat –¥–ª—è Windows"

# –ö–æ–ø–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å –µ—Å–ª–∏ –µ—Å—Ç—å
if [ -f "$SCRIPT_DIR/config/password.txt" ]; then
    cp "$SCRIPT_DIR/config/password.txt" "$KIT_DIR/"
    echo "üîê –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π–ª –ø–∞—Ä–æ–ª—è"
elif [ -f "$SCRIPT_DIR/password.txt" ]; then
    cp "$SCRIPT_DIR/password.txt" "$KIT_DIR/"
    echo "üîê –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π–ª –ø–∞—Ä–æ–ª—è"
else
    echo "‚ö†Ô∏è  –§–∞–π–ª –ø–∞—Ä–æ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω - –±—É–¥–µ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å—Å—è –≤—Ä—É—á–Ω—É—é"
fi

# –°–æ–∑–¥–∞–µ–º README
cat > "$KIT_DIR/README.md" << 'EOF'
# Recovery Kit –¥–ª—è Rustic

## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

### Linux / macOS
```bash
chmod +x recovery.sh
./recovery.sh
```

### Windows
```
recovery.bat
```
EOF
